{
	"화면이동 - 컨트롤러": {
		"prefix": "v-con-View",
		"body": [
		  "/**",
		  " * ${0:화면명}",
		  " * @param request",
		  " * @param response",
		  " * @param url",
		  " * @param model",
		  " * @param acct",
		  " * @return",
		  " * @throws Exception",
		  " */",
		  "@PostMapping(value = \"/${1:메소드명}\")",
		  "public String view_${1/(^.)/${1:/upcase}/}(HttpServletRequest request, HttpServletResponse response, String url,Model model, @AuthenticationPrincipal AccountVO acct) throws Exception {",
		  "   return url;",
		  "}"
		],
		"description": "화면이동"
	},
	"grid:type - 조회 - 컨트롤러": {
		"prefix": "v-con-Get-Grd",
		"body": [
		  "/**",
		  " * ${0:메소드설명}",
		  " * @param parm",
		  " * @return",
		  " * @throws Exception",
		  " */",
		  "@PostMapping(value = \"/getGrd_${1:메소드명}\", produces=\"application/json; charset=UTF-8\")",
		  "@ResponseBody",
		  "public Object getGrd_${1:메소드명}(@RequestParam Map<String,Object> parm) throws Exception {",
		  "    return svc${2}.get_${1:메소드명}(parm);",
		  "}"
		],
		"description": "조회 - 그리드 타입"
	},
	"form:type - 조회 - 컨트롤러": {
		"prefix": "v-con-Get-Frm",
		"body": [
		  "/**",
		  " * ${0:메소드설명}",
		  " * @param parm",
		  " * @return",
		  " * @throws Exception",
		  " */",
		  "@PostMapping(value = \"/getFrm_${1:메소드명}\", produces=\"application/json; charset=UTF-8\")",
		  "@ResponseBody",
		  "public Object getFrm_${1:메소드명}(@RequestParam Map<String,Object> parm) throws Exception {",
		  "    return svc${2}.get_${1:메소드명}(parm);",
		  "}"
		],
		"description": "조회 - 폼 타입"
	},
	"grid:type - 저장 - 컨트롤러": {
		"prefix": "v-con-Set-Grd",
		"body": [
		  "/**",
		  " * ${0:메소드설명}",
		  " * @param request",
		  " * @param parm",
		  " * @return",
		  " * @throws Exception",
		  " */",
		  "@PostMapping(value = \"/setGrd_${1:메소드명}\", produces=\"application/json;  charset=UTF-8\", method = { RequestMethod.POST })",
		  "@ResponseBody",
		  "public String setGrd_${1:메소드명}(HttpServletRequest request, @RequestParam Map<String,Object> parm) throws Exception {",
		  "    List<Map<String,Object>> shtList = getSheetData(request, parm);",
		  "    svc${2}.set_${1:메소드명}(shtList);",
		  "    return constGrdSucc;",
		  "}"
		],
		"description": "조회 - 그리드 타입"
	},
	"form:type - 저장 - 컨트롤러": {
		"prefix": "v-con-Set-Frm",
		"body": [
		  "/**",
		  " * ${0:메소드설명}",
		  " * @param request",
		  " * @param parm",
		  " * @return",
		  " * @throws Exception",
		  " */",
		  "@PostMapping(value = \"/setFrm_${1:메소드명}\", produces=\"application/json;  charset=UTF-8\", method = { RequestMethod.POST })",
		  "@ResponseBody",
		  "public String setFrm_${1:메소드명}(HttpServletRequest request,@RequestParam Map<String,Object> parm) throws Exception {",
		  "    svc${2}.set_${1:메소드명}(parm);",
		  "    return constFrmSucc;",
		  "}"
		],
		"description": "조회 - 폼 타입"
	},

	"list:return - 조회 - 서비스": {
		"prefix": "v-svc-Get-list",
		"body": [
		  "/**",
		  " * ${0:메소드설명}",
		  " * @param parm",
		  " * @return",
		  " * @throws Exception",
		  " */",
		  "List<Map<String,Object>> get_${1:메소드명}(Map<String,Object> parm) throws Exception;"
		],
		"description": "조회 - 리스트 타입"
	},
	"map:return - 조회 - 서비스": {
		"prefix": "v-svc-Get-map",
		"body": [
		  "/**",
		  " * ${0:메소드설명}",
		  " * @param parm",
		  " * @return",
		  " * @throws Exception",
		  " */",
		  "Map<String, Object> get_${1:메소드명}(Map<String,Object> parm) throws Exception;"
		],
		"description": "조회 - 맵 타입"
	},
	"list:parm - 저장 - 서비스": {
		"prefix": "v-svc-Set-list",
		"body": [
		  "/**",
		  " * ${0:메소드설명}",
		  " * @param list",
		  " * @throws Exception",
		  " */",
		  "void set_${1:메소드명}(List<Map<String,Object>> list) throws Exception;"
		],
		"description": "저장 - 리스트 타입"
	},
	"list-map:parm - 저장 - 서비스": {
		"prefix": "v-svc-Set-list-map",
		"body": [
		  "/**",
		  " * ${0:메소드설명}",
		  " * @param list",
		  " * @param parm",
		  " * @throws Exception",
		  " */",
		  "void set_${1:메소드명}(List<Map<String,Object>> list, Map<String,Object> parm) throws Exception;"
		],
		"description": "저장 - 리스트 타입"
	},
	"map:parm - 저장 - 서비스": {
		"prefix": "v-svc-Set-map",
		"body": [
		  "/**",
		  " * ${0:메소드설명}",
		  " * @param parm",
		  " * @throws Exception",
		  " */",
		  "void set_${1:메소드명}(Map<String,Object> parm) throws Exception;"
		],
		"description": "저장 - 맵 타입"
	},

	"list:return - 조회 - 서비스-impl": {
		"prefix": "v-imp-Get-list",
		"body": [
		  "/**",
		  " * ${0:메소드설명}",
		  " */",
		  "@Override",
		  "public List<Map<String,Object>> get_${1:메소드명}(Map<String,Object> parm) throws Exception{",
		  "    rps${2}.get_${1:메소드명}(parm);",
		  "    return getListFromCursor(parm);",
		  "}"
		],
		"description": "조회 - 리스트 타입"
	},
	"map:return - 조회 - 서비스-impl": {
		"prefix": "v-imp-Get-map",
		"body": [
		  "/**",
		  " * ${0:메소드설명}",
		  " */",
		  "@Override",
		  "public Map<String,Object> get_${1:메소드명}(Map<String,Object> parm) throws Exception{",
		  "    rps${2}.get_${1:메소드명}(parm);",
		  "    return getMapObjFromCursor(parm);",
		  "}"
		],
		"description": "조회 - 리스트 타입"
	},
	"list:parm - 저장 - 서비스-impl": {
		"prefix": "v-imp-Set-list",
		"body": [
		  "/**",
		  " * ${0:메소드설명}",
		  " */",
		  "@Override",
		  "@Transactional(propagation = Propagation.REQUIRED, rollbackFor={Exception.class})",
		  "public void set_${1:메소드명}(List<Map<String,Object>> list) throws Exception {",
		  "    for(int i=0;i<list.size();i++){",
		  "        rps${2}.set_${1:메소드명}(list.get(i));",
		  "    }",
		  "}"
		],
		"description": "조회 - 리스트 타입"
	},
	"list-map:parm - 저장 - 서비스-impl": {
		"prefix": "v-imp-Set-list-map",
		"body": [
		  "/**",
		  " * ${0:메소드설명}",
		  " */",
		  "@Override",
		  "@Transactional(propagation = Propagation.REQUIRED, rollbackFor={Exception.class})",
		  "public void set_${1:메소드명}(List<Map<String,Object>> list, Map<String, Object> parm) throws Exception {",
		  "    for(int i=0;i<list.size();i++){",
		  "        list.get(i).put(\"addParmKey\", parm.get(\"ParmKey\"));",
		  "        rps${2}.set_${1:메소드명}(list.get(i));",
		  "    }",
		  "}"
		],
		"description": "조회 - 리스트 타입"
	},
	"map:parm - 저장 - 서비스-impl": {
		"prefix": "v-imp-Set-map",
		"body": [
		  "/**",
		  " * ${0:메소드설명}",
		  " */",
		  "@Override",
		  "@Transactional(propagation = Propagation.REQUIRED, rollbackFor={Exception.class})",
		  "public void set_${1:메소드명}(Map<String, Object> parm) throws Exception {",
		  "    rps${2}.set_${1:메소드명}(parm);",
		  "}"
		],
		"description": "조회 - 리스트 타입"
	},

	"proc - 조회 - 레파지토리": {
		"prefix": "v-rps-Get-void",
		"body": [
		  "/**",
		  " * ${0:메소드설명}",
		  " * @param parm",
		  " */",
		  "void get_${1:메소드명}(Map<String,Object> parm);"
		],
		"description": "조회 - list"
	},
	"list:return - query - 조회 - 레파지토리": {
		"prefix": "v-rps-Get-list",
		"body": [
		  "/**",
		  " * ${0:메소드설명}",
		  " * @param parm",
		  " */",
		  "List<Map<String, Object>> get_${1:메소드명}(Map<String,Object> parm);"
		],
		"description": "조회 - list"
	},
	"map:return - query - 조회 - 레파지토리": {
		"prefix": "v-rps-Get-map",
		"body": [
		  "/**",
		  " * ${0:메소드설명}",
		  " * @param parm",
		  " */",
		  "Map<String,Object> get_${1:메소드명}(Map<String,Object> parm);"
		],
		"description": "조회 - list"
	},
	"map - 저장 - 레파지토리": {
		"prefix": "v-rps-Set-map",
		"body": [
		  "/**",
		  " * ${0:메소드설명}",
		  " * @param parm",
		  " */",
		  "void set_${1:메소드명}(Map<String,Object> parm);"
		],
		"description": "저장 - map"
	},

	"HashMap 생성": {
		"prefix": "v-fn-Hashmap",
		"body": [
			"Map<String,Object> parmMap = new HashMap<String, Object>();",
			"parmMap.put(\"Key\", \"Value\");"
		],
		"description": "HashMap - 함수"
	},
	"메일발송": {
		"prefix": "v-send-Mail",
		"body": [
		  "Autowired",
		  "private MailSender mSender;",
		  "",
		  "",
		  "MailSenderVO mVo = new MailSenderVO();",
		  "",
		  "mVo.setSubject(\"${1:제목}\");",
		  "mVo.setText(\"${2:내용}\");",
		  "mVo.setFrom(\"test@gmail.com\");",
		  "mVo.addRcvTo(\"test@gmail.com\");",
		  "mVo.addRcvCc(\"test@naver.com\");",
		  "mVo.addRcvBcc(\"test@naver.com\");",
		  "mVo.addRcvBcc(\"test@naver.com\");",
		  "mSender.sendMail(mVo);"
		],
		"description": "메일발송"
	},
	"문자발송": {
		"prefix": "v-send-Sms",
		"body": [
		  "Autowired",
		  "private SmsSender sSender;",
		  "",
		  "SmsSenderVO mVo = new SmsSenderVO();",
		  "",
		  "mVo.addRecipient(\"01012345678\"); // 연속해서 추가가능",
		  "mVo.addRecipient(\"01087654321\");",
		  "",
		  "mVo.setSubject(\"문자발송\");",
		  "mVo.setContent(\"가나다라마\");",
		  "mVo.setUrl(\"URL\");",
		  "mVo.setDate(\"202202220101\");",
		  "",
		  "sSender.sendSms(mVo);"
		],
		"description": "문자발송"
	},
	"개인정보 - 로그": {
		"prefix": "v-log-PrivateLog",
		"body": [
		  "@Autowired",
		  "private SystemLogService svcSys;",
		  "",
		  "// 1. 로그정보",
		  "SecLogVO vo = new SecLogVO();",
		  "",
		  "vo.setMNU_CD(String.valueOf(map.get(\"WRK_MNU\")));  // 메뉴코드",
		  "vo.setWRK_TP(\"R\");                                 // 작업타입(R:조회,I:등록,U:수정)",
		  "vo.setWRK_NM(\"${1:작업명칭}\");                     // 작업명칭",
		  "vo.setXML_ID(\"${2:XmlId}\");                        // XML ID",
		  "vo.setXML_PARM(map);                                 // 파라미터",
		  "",
		  "// 2. 로그저장",
		  "svcSys.insertPrivCnctLog(vo);"
		],
		"description": "개인정보 - 로그"
	},
	"저장 - 첨부파일 - 함수": {
		"prefix": "v-fn-Atfl-Mng",
		"body": [
		  "// 1.ATFL INFO",
		  "FileInfoVO fileVO  = new FileInfoVO();",
		  "fileVO = (FileInfoVO) convertMapToObject(map,fileVO,\"dext5Upload1\");",
		  "",
		  "// 2.SAVE ATFL",
		  "fileVO = svcfile.set_Atfl(fileVO);",
		  "",
          "// 3.INSERT ATFL GRP",
          "if(!isEmpty(fileVO.getRTN_ATFL_GRP())){",
          "    parm.put(\"ATFL_GRP\",fileVO.getRTN_ATFL_GRP());",
          "}"
		],
		"description": "저장 - 첨부파일 - 함수"
	},
	"주입 - 첨부파일 - 함수": {
		"prefix": "v-fn-Atfl-Di",
		"body": [
		  "@Autowired",
		  "private FileService svcfile;"
		],
		"description": "주입 - 첨부파일 - 함수"
	},
	"아이디 - 세션정보 - 함수": {
		"prefix": "v-fn-Session-usrId",
		"body": [
		  "ssInfo().getUSR_ID();"
		],
		"description": "아이디 - 세션정보 - 함수"
	},
	"부서코드 - 세션정보 - 함수": {
		"prefix": "v-fn-Session-deptCd",
		"body": [
		  "ssInfo().getDEPT_CD();"
		],
		"description": "아이디 - 세션정보 - 함수"
	},
	"법인코드 - 세션정보 - 함수": {
		"prefix": "v-fn-Session-corpCd",
		"body": [
		  "ssInfo().getCORP_CD();"
		],
		"description": "아이디 - 세션정보 - 함수"
	}
}
